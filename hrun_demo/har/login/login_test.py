# NOTE: Generated By HttpRunner v3.1.4
# FROM: har/login_1.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import pytest
from httprunner import Parameters


class TestCaseLogin(HttpRunner):
    @classmethod
    def setup_class(cls):
        print("运行于测试用例之前")

    @classmethod
    def teardown_class(cls):
        print("运行于测试用例之后")

    @pytest.mark.parametrize("param", Parameters(
        {"title-username-password-isLogin-status_code-content-contain_msg": "${get_userinfo()}"}
    ),)
    def test_start(self, param):
        super().test_start(param)

    config = Config("testcase description").base_url("${ENV(BASE_URL_PRE)}").verify(False)

    teststeps = [
        Step(
            RunRequest("$title")
            .setup_hook("${hook_up($request)}")
            .post(
                "/3/7.5.26/bplapi/user/v1/loginByEmailPassword"
            )
            .with_params(**{"client": "3102879F-6EE8-41D4-BCD0-4A95BCE06D06"})
            .with_headers(
                **{
                    "Content-Type": "application/x-www-form-urlencoded; charset=utf-8",
                    "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 14_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 isp/unknown network/WIFI prokanqiu/7.5.26 iPhone13,2",
                }
            )
            .with_data(
                {
                    "clientId": "88505902",
                    "password": "$password",
                    "username": "$username",
                    "client": "3102879F-6EE8-41D4-BCD0-4A95BCE06D06",

                }
            )
            .teardown_hook("${hook_down($response)}")
            .validate()
            .assert_equal("status_code", "$status_code")
            .assert_equal("body.isLogin", "$isLogin")
            # .assert_string_equals("body.error.text", "$text")
            # .assert_contains("body.error.text", "$text")
            # .assert_contains("body.result","$contain_msg")
            .assert_contains("$content", "$contain_msg")
            .assert_contains("$content","$contain_msg")



        ),
    ]


if __name__ == "__main__":
    TestCaseLogin().test_start()
